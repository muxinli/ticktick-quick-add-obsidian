/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var T=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var _=Object.prototype.hasOwnProperty;var E=(s,i)=>{for(var e in i)T(s,e,{get:i[e],enumerable:!0})},I=(s,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of P(i))!_.call(s,n)&&n!==e&&T(s,n,{get:()=>i[n],enumerable:!(t=b(i,n))||t.enumerable});return s};var U=s=>I(T({},"__esModule",{value:!0}),s);var N={};E(N,{default:()=>k});module.exports=U(N);var r=require("obsidian");var l=require("obsidian"),m={accessToken:"",clientId:"",clientSecret:"",redirectUri:"urn:ietf:wg:oauth:2.0:oob"},u=class extends l.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"TickTick API Settings"}),new l.Setting(e).setName("Client ID").setDesc("Enter your TickTick Client ID from the Developer Console.").addText(t=>t.setPlaceholder("Your Client ID").setValue(this.plugin.settings.clientId||"").onChange(async n=>{this.plugin.settings.clientId=n.trim(),await this.plugin.saveSettings()})),new l.Setting(e).setName("Client Secret").setDesc("Enter your TickTick Client Secret (input is masked).").addText(t=>(t.inputEl.type="password",t.setPlaceholder("\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022").setValue(this.plugin.settings.clientSecret||"").onChange(async n=>{this.plugin.settings.clientSecret=n.trim(),await this.plugin.saveSettings()}),t)),new l.Setting(e).setName("Redirect URI").setDesc("Enter the Redirect URI registered in your TickTick Developer Portal. (Default: urn:ietf:wg:oauth:2.0:oob)").addText(t=>t.setPlaceholder("urn:ietf:wg:oauth:2.0:oob").setValue(this.plugin.settings.redirectUri||"").onChange(async n=>{this.plugin.settings.redirectUri=n.trim(),await this.plugin.saveSettings()})),new l.Setting(e).setName("Access Token").setDesc("Your current access token (read-only).").addText(t=>t.setPlaceholder("Access token will appear here").setValue(this.plugin.settings.accessToken||"").onChange(async n=>{this.plugin.settings.accessToken=n.trim(),await this.plugin.saveSettings()})),new l.Setting(e).setName("Refresh Token").setDesc("Stored refresh token (for debugging purposes).").addText(t=>t.setPlaceholder("Refresh token").setValue(this.plugin.settings.refreshToken||"").onChange(async n=>{this.plugin.settings.refreshToken=n.trim(),await this.plugin.saveSettings()})),new l.Setting(e).setName("Connect to TickTick").setDesc("Click to open the OAuth authorization URL in your browser.").addButton(async t=>{t.setButtonText("Connect").onClick(async()=>{await this.plugin.startAuthFlow()})}),new l.Setting(e).setName("Authorization Code").setDesc("Paste the authorization code from TickTick here to obtain an access token.").addText(t=>t.setPlaceholder("Enter authorization code").onChange(async n=>{n.trim()&&(await this.plugin.exchangeAuthCodeForToken(n.trim()),t.setValue(""),this.display())}))}};function w(s){let i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e="";for(let t=0;t<s;t++)e+=i.charAt(Math.floor(Math.random()*i.length));return e}function A(s,i){let e=i,t=i,n=s.lineCount();for(;e>0&&s.getLine(e-1).trim()!=="";)e--;for(;t<n-1&&s.getLine(t+1).trim()!=="";)t++;let c="";for(let a=e;a<=t;a++)c+=s.getLine(a)+`
`;return{text:c.trim(),start:e,end:t}}function v(s){let i=new Uint8Array(s),e="";return i.forEach(t=>e+=String.fromCharCode(t)),btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}async function D(){let s=w(64),i=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(s)),e=v(i);return{codeVerifier:s,codeChallenge:e}}function f(s,i,e){console.log(JSON.stringify({timestamp:new Date().toISOString(),plugin:"ticktick-integration",action:i,...e,clientId:s.settings.clientId?"***":void 0,accessToken:s.settings.accessToken?"***":void 0}))}var k=class extends r.Plugin{async onload(){console.log("Loading TickTick Plugin"),await this.loadSettings(),this.addSettingTab(new u(this.app,this)),this.addCommand({id:"create-ticktick-task",name:"Create TickTick Task from Paragraph",editorCallback:async(e,t)=>{let n=e.getCursor();if(!t.file){new r.Notice("No file found for the current view!");return}let{text:c,start:a,end:o}=A(e,n.line);if(!c){new r.Notice("No paragraph text found!");return}let g=w(8),h=`#ticktick ${c} ^${g}`;e.replaceRange(h,{line:a,ch:0},{line:o,ch:e.getLine(o).length});let d=this.app.vault.getName(),y=t.file.path,S=`obsidian://advanced-uri?vault=${encodeURIComponent(d)}&filepath=${encodeURIComponent(y)}&block=${encodeURIComponent(g)}`,x=`${c}

[Open in Obsidian](${S})`,C=c.length>50?c.substring(0,50)+"...":c;await this.ensureFreshToken();try{(await this.createTicktickTask(C,x)).success?new r.Notice("TickTick task created successfully!"):new r.Notice("Failed to create TickTick task.")}catch(p){f(this,"task_creation_failed",{error:p.message}),new r.Notice(`Failed to create task: ${p.message}
Check console for details.`)}}})}onunload(){console.log("Unloading TickTick Plugin")}async startAuthFlow(){let e=this.settings.clientId;if(!e){new r.Notice("Please enter your Client ID in the settings.");return}let t=this.settings.redirectUri||"urn:ietf:wg:oauth:2.0:oob",n=encodeURIComponent("tasks:read tasks:write"),{codeVerifier:c,codeChallenge:a}=await D(),o=w(32);this.settings.tempCodeVerifier=c,this.settings.tempState=o,await this.saveSettings();let g=`https://ticktick.com/oauth/authorize?client_id=${e}&redirect_uri=${encodeURIComponent(t)}&response_type=code&scope=${n}&code_challenge=${a}&code_challenge_method=S256&state=${o}`;window.open(g,"_blank"),new r.Notice("OAuth flow initiated. Please complete it in your browser.")}async exchangeAuthCodeForToken(e){let t="https://ticktick.com/oauth/token",n=this.settings.redirectUri||"urn:ietf:wg:oauth:2.0:oob",c=this.settings.clientId,a=this.settings.clientSecret,o=this.settings.tempCodeVerifier;if(!o||!c||!a){new r.Notice("Missing required credentials. Please update your settings.");return}let g=new URLSearchParams({grant_type:"authorization_code",code:e,redirect_uri:n,client_id:c,client_secret:a,code_verifier:o});try{let h=await(0,r.requestUrl)({url:t,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64)"},body:g.toString()});if(h.status===200){let d=h.json;d.refresh_token?this.settings.refreshToken=d.refresh_token:(console.warn("Refresh token not received during token exchange."),new r.Notice("Refresh token not received. Re-authentication may be required more often.")),this.settings.accessToken=d.access_token,this.settings.tokenExpiry=Date.now()+d.expires_in*1e3*.85,await this.saveSettings(),new r.Notice("TickTick access token obtained successfully!")}else console.error("Token exchange error (status):",h.status),console.log("response.json:",h.json),console.log("response.text:",h.text),new r.Notice("Failed to obtain access token.")}catch(h){console.error("Error during token exchange:",h),new r.Notice("Error during token exchange.")}}async refreshAccessToken(){if(!this.settings.refreshToken)throw new Error("No refresh token available. Please reconnect.");let e="https://ticktick.com/oauth/token",t=this.settings.clientId,n=this.settings.clientSecret,c=new URLSearchParams({grant_type:"refresh_token",refresh_token:this.settings.refreshToken,client_id:t,client_secret:n});try{let a=await(0,r.requestUrl)({url:e,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64)"},body:c.toString()});if(a.status===200){let o=a.json;o.refresh_token&&(this.settings.refreshToken=o.refresh_token),this.settings.accessToken=o.access_token,this.settings.tokenExpiry=Date.now()+o.expires_in*1e3*.85,await this.saveSettings(),new r.Notice("Access token refreshed successfully!")}else throw console.error("Refresh token error:",a.text),new Error("Failed to refresh token")}catch(a){throw console.error("Error refreshing access token:",a),a}}async ensureFreshToken(){if(this.settings.tokenExpiry&&Date.now()>this.settings.tokenExpiry){f(this,"token_expired",{tokenExpiry:this.settings.tokenExpiry});try{await this.refreshAccessToken()}catch(e){throw new r.Notice("Reauthentication required. Please reconnect to TickTick."),e}}}async createTicktickTask(e,t){let n=this.settings.accessToken;if(!n)return new r.Notice("No access token found. Please connect to TickTick in the settings."),{success:!1};let c="https://api.ticktick.com/open/v1/task",a={title:e,content:t};try{f(this,"task_creation_request",{endpoint:c,title:e});let o=await(0,r.requestUrl)({url:c,method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64)"},body:JSON.stringify(a)});return o.status===200?{success:!0}:(console.error("TickTick API error (status):",o.status),console.log("response.json:",o.json),console.log("response.text:",o.text),{success:!1})}catch(o){return console.error("TickTick API error:",o),{success:!1}}}async loadSettings(){this.settings=Object.assign({},m,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
